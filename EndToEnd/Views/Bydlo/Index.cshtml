
@model PagedList.IPagedList<EndToEnd.Models.BydloModels>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Pasze dla bydła</h2>


<br />

@if (Request.IsAuthenticated && User.IsInRole("Administrator"))
{
    <p>
        @Html.ActionLink("Dodaj", "Create")
    </p>
}

@using (Html.BeginForm("Index", "Bydlo", FormMethod.Get))
{
    <p>
        Szukaj po wieku: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <button type="submit" class="btn btn-info" name="Szukaj">
            <span class="glyphicon glyphicon-search"></span>
        </button>
    </p>
}



<table class="table table-hover table-bordered">
    <tr>
        <th>
            @Html.ActionLink("Wiek", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Typ", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Pasza", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Producent", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Cena >>", "Index", new { SortOrder = ViewBag.CenaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Białko", "Index", new { SortOrder = ViewBag.BialkoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Energia", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Oleje i tłuszcze", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Wapń", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Fosfor", "Index", "Bydlo")
        </th>
        <th>
            @Html.ActionLink("Sód", "Index", "Bydlo")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Wiek)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Typ)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pasza)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Producent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cena)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bialko)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Energia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Oleje_I_Tluszcze)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Wapn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fosfor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sod)
            </td>
            <td>
                @if (Request.IsAuthenticated && User.IsInRole("Administrator"))
                {
                    @Html.ActionLink("Edytuj |", "Edit", new { id = item.ID })
                }
               
                    @Html.ActionLink("Szczegóły", "Details", new { id = item.ID })


                @if (Request.IsAuthenticated && User.IsInRole("Administrator"))
                {
                    @Html.ActionLink("| Usuń", "Delete", new { id = item.ID })
                }
            </td>

        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))